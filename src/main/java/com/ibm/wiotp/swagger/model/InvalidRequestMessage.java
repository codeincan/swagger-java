/*
 * IBM Watson IoT Platform Organization Administration REST APIs
 * The Organization Adminstration APIs can be used to configure an organization (including  creating and deleting devices), checking usage, service status and diagnosing device  connection problems. For information on this API, and how to use Watson IoT Platform APIs generally see  [the API documentation](https://console.ng.bluemix.net/docs/services/IoT/reference/api.html). 
 *
 * OpenAPI spec version: 0002
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ibm.wiotp.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.wiotp.swagger.model.ErrorMessage;
import com.ibm.wiotp.swagger.model.ErrorMessageException;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InvalidRequestMessage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-30T18:06:21.121+01:00")
public class InvalidRequestMessage {
  @SerializedName("message")
  private String message = null;

  @SerializedName("exception")
  private ErrorMessageException exception = null;

  @SerializedName("violations")
  private List<ErrorMessage> violations = new ArrayList<ErrorMessage>();

  public InvalidRequestMessage message(String message) {
    this.message = message;
    return this;
  }

   /**
   * English language error message
   * @return message
  **/
  @ApiModelProperty(required = true, value = "English language error message")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public InvalidRequestMessage exception(ErrorMessageException exception) {
    this.exception = exception;
    return this;
  }

   /**
   * Get exception
   * @return exception
  **/
  @ApiModelProperty(required = true, value = "")
  public ErrorMessageException getException() {
    return exception;
  }

  public void setException(ErrorMessageException exception) {
    this.exception = exception;
  }

  public InvalidRequestMessage violations(List<ErrorMessage> violations) {
    this.violations = violations;
    return this;
  }

  public InvalidRequestMessage addViolationsItem(ErrorMessage violationsItem) {
    this.violations.add(violationsItem);
    return this;
  }

   /**
   * List of constraint violations for the invalid request
   * @return violations
  **/
  @ApiModelProperty(required = true, value = "List of constraint violations for the invalid request")
  public List<ErrorMessage> getViolations() {
    return violations;
  }

  public void setViolations(List<ErrorMessage> violations) {
    this.violations = violations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvalidRequestMessage invalidRequestMessage = (InvalidRequestMessage) o;
    return Objects.equals(this.message, invalidRequestMessage.message) &&
        Objects.equals(this.exception, invalidRequestMessage.exception) &&
        Objects.equals(this.violations, invalidRequestMessage.violations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, exception, violations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvalidRequestMessage {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    exception: ").append(toIndentedString(exception)).append("\n");
    sb.append("    violations: ").append(toIndentedString(violations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

