/*
 * IBM Watson IoT Platform Organization Administration REST APIs
 * The Organization Adminstration APIs can be used to configure an organization (including  creating and deleting devices), checking usage, service status and diagnosing device  connection problems. For information on this API, and how to use Watson IoT Platform APIs generally see  [the API documentation](https://console.ng.bluemix.net/docs/services/IoT/reference/api.html). 
 *
 * OpenAPI spec version: 0002
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ibm.wiotp.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.wiotp.swagger.model.DeviceInfo;
import com.ibm.wiotp.swagger.model.UpdateableDeviceStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DeviceUpdateRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-30T18:06:21.121+01:00")
public class DeviceUpdateRequest {
  @SerializedName("deviceInfo")
  private DeviceInfo deviceInfo = null;

  @SerializedName("metadata")
  private Object metadata = null;

  @SerializedName("status")
  private UpdateableDeviceStatus status = null;

  @SerializedName("extensions")
  private Object extensions = null;

  public DeviceUpdateRequest deviceInfo(DeviceInfo deviceInfo) {
    this.deviceInfo = deviceInfo;
    return this;
  }

   /**
   * Get deviceInfo
   * @return deviceInfo
  **/
  @ApiModelProperty(value = "")
  public DeviceInfo getDeviceInfo() {
    return deviceInfo;
  }

  public void setDeviceInfo(DeviceInfo deviceInfo) {
    this.deviceInfo = deviceInfo;
  }

  public DeviceUpdateRequest metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Metadata of the device
   * @return metadata
  **/
  @ApiModelProperty(value = "Metadata of the device")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

  public DeviceUpdateRequest status(UpdateableDeviceStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public UpdateableDeviceStatus getStatus() {
    return status;
  }

  public void setStatus(UpdateableDeviceStatus status) {
    this.status = status;
  }

  public DeviceUpdateRequest extensions(Object extensions) {
    this.extensions = extensions;
    return this;
  }

   /**
   * Device level extension configuration
   * @return extensions
  **/
  @ApiModelProperty(value = "Device level extension configuration")
  public Object getExtensions() {
    return extensions;
  }

  public void setExtensions(Object extensions) {
    this.extensions = extensions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceUpdateRequest deviceUpdateRequest = (DeviceUpdateRequest) o;
    return Objects.equals(this.deviceInfo, deviceUpdateRequest.deviceInfo) &&
        Objects.equals(this.metadata, deviceUpdateRequest.metadata) &&
        Objects.equals(this.status, deviceUpdateRequest.status) &&
        Objects.equals(this.extensions, deviceUpdateRequest.extensions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceInfo, metadata, status, extensions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceUpdateRequest {\n");
    
    sb.append("    deviceInfo: ").append(toIndentedString(deviceInfo)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

