/*
 * IBM Watson IoT Platform Organization Administration REST APIs
 * The Organization Adminstration APIs can be used to configure an organization (including  creating and deleting devices), checking usage, service status and diagnosing device  connection problems. For information on this API, and how to use Watson IoT Platform APIs generally see  [the API documentation](https://console.ng.bluemix.net/docs/services/IoT/reference/api.html). 
 *
 * OpenAPI spec version: 0002
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ibm.wiotp.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.wiotp.swagger.model.DeviceInfo;
import com.ibm.wiotp.swagger.model.EdgeConfiguration;
import com.ibm.wiotp.swagger.model.Metadata;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DeviceTypeUpdateRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-30T18:06:21.121+01:00")
public class DeviceTypeUpdateRequest {
  @SerializedName("description")
  private String description = null;

  @SerializedName("deviceInfo")
  private DeviceInfo deviceInfo = null;

  @SerializedName("edgeConfiguration")
  private EdgeConfiguration edgeConfiguration = null;

  @SerializedName("metadata")
  private Metadata metadata = null;

  public DeviceTypeUpdateRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the device type
   * @return description
  **/
  @ApiModelProperty(value = "Description of the device type")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DeviceTypeUpdateRequest deviceInfo(DeviceInfo deviceInfo) {
    this.deviceInfo = deviceInfo;
    return this;
  }

   /**
   * Get deviceInfo
   * @return deviceInfo
  **/
  @ApiModelProperty(value = "")
  public DeviceInfo getDeviceInfo() {
    return deviceInfo;
  }

  public void setDeviceInfo(DeviceInfo deviceInfo) {
    this.deviceInfo = deviceInfo;
  }

  public DeviceTypeUpdateRequest edgeConfiguration(EdgeConfiguration edgeConfiguration) {
    this.edgeConfiguration = edgeConfiguration;
    return this;
  }

   /**
   * Get edgeConfiguration
   * @return edgeConfiguration
  **/
  @ApiModelProperty(value = "")
  public EdgeConfiguration getEdgeConfiguration() {
    return edgeConfiguration;
  }

  public void setEdgeConfiguration(EdgeConfiguration edgeConfiguration) {
    this.edgeConfiguration = edgeConfiguration;
  }

  public DeviceTypeUpdateRequest metadata(Metadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Metadata getMetadata() {
    return metadata;
  }

  public void setMetadata(Metadata metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceTypeUpdateRequest deviceTypeUpdateRequest = (DeviceTypeUpdateRequest) o;
    return Objects.equals(this.description, deviceTypeUpdateRequest.description) &&
        Objects.equals(this.deviceInfo, deviceTypeUpdateRequest.deviceInfo) &&
        Objects.equals(this.edgeConfiguration, deviceTypeUpdateRequest.edgeConfiguration) &&
        Objects.equals(this.metadata, deviceTypeUpdateRequest.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, deviceInfo, edgeConfiguration, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceTypeUpdateRequest {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    deviceInfo: ").append(toIndentedString(deviceInfo)).append("\n");
    sb.append("    edgeConfiguration: ").append(toIndentedString(edgeConfiguration)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

