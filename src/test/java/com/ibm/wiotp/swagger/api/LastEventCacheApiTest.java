/*
 * IBM Watson IoT Platform Organization Information Management REST APIs
 * The Information Management APIs can be used to access device event data as well as  get and update device location and obtain weather information for that location. For information on this API, and how to use Watson IoT Platform APIs generally see  [the API documentation](https://console.ng.bluemix.net/docs/services/IoT/reference/api.html).  version: \"0002\" 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ibm.wiotp.swagger.api;

import com.ibm.wiotp.swagger.ApiException;
import com.ibm.wiotp.swagger.model.ErrorMessage;
import com.ibm.wiotp.swagger.model.Event;
import com.ibm.wiotp.swagger.model.Events;
import com.ibm.wiotp.swagger.model.LECConfig;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LastEventCacheApi
 */
@Ignore
public class LastEventCacheApiTest {

    private final LastEventCacheApi api = new LastEventCacheApi();

    
    /**
     * Retrieve the Last Event Cache configuration for your organization
     *
     * Retrieves the current configuration for the Last Event Cache (LEC) feature for your organization. You can use this endpoint to determine whether or not the LEC feature is currently enabled, along with how many days cached device events will persist for before being removed from the cache.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configLecGetTest() throws ApiException {
        LECConfig response = api.configLecGet();

        // TODO: test validations
    }
    
    /**
     * Update the Last Event Cache configuration for your organization
     *
     * Updates the current configuration for the Last Event Cache (LEC) feature for your organization. You can use this endpoint to control whether or not the LEC feature is currently enabled, along with how many days cached device events will persist for before being removed from the cache.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configLecPutTest() throws ApiException {
        LECConfig config = null;
        LECConfig response = api.configLecPut(config);

        // TODO: test validations
    }
    
    /**
     * Get last event for a specific event id for a specific device
     *
     * Get last event for a specific event id for a specific device
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deviceTypesDeviceTypeDevicesDeviceIdEventsEventNameGetTest() throws ApiException {
        String deviceType = null;
        String deviceId = null;
        String eventName = null;
        Event response = api.deviceTypesDeviceTypeDevicesDeviceIdEventsEventNameGet(deviceType, deviceId, eventName);

        // TODO: test validations
    }
    
    /**
     * Get all last events for a specific device
     *
     * Get all last events for a specific device
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deviceTypesDeviceTypeDevicesDeviceIdEventsGetTest() throws ApiException {
        String deviceType = null;
        String deviceId = null;
        Events response = api.deviceTypesDeviceTypeDevicesDeviceIdEventsGet(deviceType, deviceId);

        // TODO: test validations
    }
    
}
