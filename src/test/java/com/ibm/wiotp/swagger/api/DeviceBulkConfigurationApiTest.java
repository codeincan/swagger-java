/*
 * IBM Watson IoT Platform Organization Administration REST APIs
 * The Organization Adminstration APIs can be used to configure an organization (including  creating and deleting devices), checking usage, service status and diagnosing device  connection problems. For information on this API, and how to use Watson IoT Platform APIs generally see  [the API documentation](https://console.ng.bluemix.net/docs/services/IoT/reference/api.html). 
 *
 * OpenAPI spec version: 0002
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ibm.wiotp.swagger.api;

import com.ibm.wiotp.swagger.ApiException;
import java.math.BigDecimal;
import com.ibm.wiotp.swagger.model.DeviceBulkDeletionRequestList;
import com.ibm.wiotp.swagger.model.DeviceBulkDeletionResponseList;
import com.ibm.wiotp.swagger.model.DeviceBulkRegistrationRequestList;
import com.ibm.wiotp.swagger.model.DeviceListResponse;
import com.ibm.wiotp.swagger.model.DeviceWithPasswordList;
import com.ibm.wiotp.swagger.model.ErrorMessage;
import com.ibm.wiotp.swagger.model.InvalidRequestMessage;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeviceBulkConfigurationApi
 */
@Ignore
public class DeviceBulkConfigurationApiTest {

    private final DeviceBulkConfigurationApi api = new DeviceBulkConfigurationApi();

    
    /**
     * Register multiple new devices
     *
     * Register multiple new devices, each request can contain a maximum of 512 kB.  The response body will contain the generated authentication tokens for all devices. You must make sure to record these tokens when processing the response. We are not able to retrieve lost authentication tokens.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void bulkDevicesAddPostTest() throws ApiException {
        DeviceBulkRegistrationRequestList devices = null;
        DeviceWithPasswordList response = api.bulkDevicesAddPost(devices);

        // TODO: test validations
    }
    
    /**
     * List devices
     *
     * Sorting can be performed on any of the following properties (sort order can be reversed by prefixing the property name with &#39;-&#39;): - typeId - deviceId - deviceInfo.description - deviceInfo.descriptiveLocation - deviceInfo.serialNumber - deviceInfo.deviceClass - deviceInfo.fwVersion - deviceInfo.hwVersion - deviceInfo.manufacturer - deviceInfo.model - mgmt.dormant - mgmt.supports.deviceActions - mgmt.supports.firmwareActions - registration.date - status.alert.enabled - status.alert.timestamp  The following facets are supported: - typeId - deviceInfo.deviceClass - deviceInfo.fwVersion - deviceInfo.hwVersion - deviceInfo.manufacturer - deviceInfo.model - mgmt.dormant - mgmt.supports.deviceActions - mgmt.supports.firmwareActions - status.alert.enabled
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void bulkDevicesGetTest() throws ApiException {
        String bookmark = null;
        BigDecimal limit = null;
        List<String> sort = null;
        List<String> facets = null;
        String typeId = null;
        String deviceId = null;
        String gatewayTypeId = null;
        String gatewayId = null;
        Boolean statusAlertEnabled = null;
        Object registrationDate = null;
        Boolean mgmtDormant = null;
        Boolean mgmtSupportsDeviceActions = null;
        Boolean mgmtSupportsFirmwareActions = null;
        String deviceInfoDescription = null;
        String deviceInfoDescriptiveLocation = null;
        String deviceInfoSerialNumber = null;
        String deviceInfoDeviceClass = null;
        String deviceInfoFwVersion = null;
        String deviceInfoHwVersion = null;
        String deviceInfoManufacturer = null;
        String deviceInfoModel = null;
        DeviceListResponse response = api.bulkDevicesGet(bookmark, limit, sort, facets, typeId, deviceId, gatewayTypeId, gatewayId, statusAlertEnabled, registrationDate, mgmtDormant, mgmtSupportsDeviceActions, mgmtSupportsFirmwareActions, deviceInfoDescription, deviceInfoDescriptiveLocation, deviceInfoSerialNumber, deviceInfoDeviceClass, deviceInfoFwVersion, deviceInfoHwVersion, deviceInfoManufacturer, deviceInfoModel);

        // TODO: test validations
    }
    
    /**
     * Delete multiple devices
     *
     * Delete multiple devices, each request can contain a maximum of 512 kB.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void bulkDevicesRemovePostTest() throws ApiException {
        DeviceBulkDeletionRequestList devices = null;
        DeviceBulkDeletionResponseList response = api.bulkDevicesRemovePost(devices);

        // TODO: test validations
    }
    
}
